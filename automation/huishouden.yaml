############################################
############ Wasmachine / droger ###########
############################################
- alias: "Notify when the washing machine cycle is complete"
  trigger:
    - platform: state
      entity_id: sensor.wasmachine_current
      from: "Draait"
      to: "Klaar"
      for:
        seconds: 90
  condition:
    - condition: state
      entity_id: input_boolean.vakantiestand
      state: "off"
    - condition: state
      entity_id: input_boolean.notify_home
      state: "off"
  action:
    - service: media_player.volume_set
      data:
        entity_id: >-
          {% set ms = namespace(items=[]) %}
          {%- for state in states.input_boolean -%}
            {%- if ( state.state_with_unit =="on") and (state_attr(state.entity_id, 'icon') == 'mdi:cast-audio'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-chrome'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-home') -%}
              {%- set ms.items = ms.items + ['media_player.' + state.entity_id.split('.')[1]] -%}
            {%- endif -%}
          {%- endfor -%}
          {{- ms.items-}}
        volume_level: 0.5
    - service: tts.google_home_say
      data:
        entity_id: >-
          {% set ms = namespace(items=[]) %}
          {%- for state in states.input_boolean -%}
            {%- if ( state.state_with_unit =="on") and (state_attr(state.entity_id, 'icon') == 'mdi:cast-audio'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-chrome'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-home') -%}
              {%- set ms.items = ms.items + ['media_player.' + state.entity_id.split('.')[1]] -%}
            {%- endif -%}
          {%- endfor -%}
          {{- ms.items-}}
        message: >-
          <speak>
            De was is schoon!<break time="300ms"/> Haal de was maar uit de wasmachine.
          </speak>
        #        language: 'nl'
        cache: false
    - service: notify.html5
      data:
        message: De was is schoon!
        title: Wasmachine
    - delay:
        minutes: 10
    - service: html5.dismiss
- alias: "Notify when the tumbledryer cycle is complete"
  trigger:
    platform: state
    entity_id: sensor.droger_current
    from: "Draait"
    to: "Klaar"
    for:
      minutes: 2
  condition:
    - condition: state
      entity_id: input_boolean.vakantiestand
      state: "off"
    - condition: state
      entity_id: input_boolean.notify_home
      state: "off"
  action:
    - service: media_player.volume_set
      data:
        entity_id: >-
          {% set ms = namespace(items=[]) %}
          {%- for state in states.input_boolean -%}
            {%- if ( state.state_with_unit =="on") and (state_attr(state.entity_id, 'icon') == 'mdi:cast-audio'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-chrome'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-home') -%}
              {%- set ms.items = ms.items + ['media_player.' + state.entity_id.split('.')[1]] -%}
            {%- endif -%}
          {%- endfor -%}
          {{- ms.items-}}
        volume_level: 0.5
    - service: tts.google_home_say
      data:
        entity_id: >-
          {% set ms = namespace(items=[]) %}
          {%- for state in states.input_boolean -%}
            {%- if ( state.state_with_unit =="on") and (state_attr(state.entity_id, 'icon') == 'mdi:cast-audio'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-chrome'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-home') -%}
              {%- set ms.items = ms.items + ['media_player.' + state.entity_id.split('.')[1]] -%}
            {%- endif -%}
          {%- endfor -%}
          {{- ms.items-}}
        message: >-
          <speak>
            De was is droog!<break time="300ms"/> Haal de was maar uit de droger.
          </speak>
        #        language: 'nl'
        cache: false
    - service: notify.html5
      data:
        message: De was is droog!
        title: Droger
    - delay:
        minutes: 10
    - service: html5.dismiss
########################
### Vaatwasser ##########
#########################
- alias: Notify when the dishwasher cycle is complete
  trigger:
    - platform: state
      entity_id: sensor.vaatwasser_program_progress
      to: "100"
    - platform: template
      value_template: >-
        {{ as_timestamp(states('sensor.vaatwasser_remaining_program_time')) == (as_timestamp(utcnow())) }}
  condition:
    - condition: state
      entity_id: input_boolean.vakantiestand
      state: "off"
    - condition: state
      entity_id: input_boolean.notify_home
      state: "off"
  action:
    - service: media_player.volume_set
      data:
        entity_id: >-
          {% set ms = namespace(items=[]) %}
          {%- for state in states.input_boolean -%}
            {%- if ( state.state_with_unit =="on") and (state_attr(state.entity_id, 'icon') == 'mdi:cast-audio'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-chrome'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-home') -%}
              {%- set ms.items = ms.items + ['media_player.' + state.entity_id.split('.')[1]] -%}
            {%- endif -%}
          {%- endfor -%}
          {{- ms.items-}}
        volume_level: 0.5
    - service: tts.google_home_say
      data:
        entity_id: >-
          {% set ms = namespace(items=[]) %}
          {%- for state in states.input_boolean -%}
            {%- if ( state.state_with_unit =="on") and (state_attr(state.entity_id, 'icon') == 'mdi:cast-audio'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-chrome'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-home') -%}
              {%- set ms.items = ms.items + ['media_player.' + state.entity_id.split('.')[1]] -%}
            {%- endif -%}
          {%- endfor -%}
          {{- ms.items-}}
        message: >-
          <speak>
            De vaat is schoon!<break time="300ms"/> Ruim de vaatwasser maar uit.
          </speak>
        #        language: 'nl'
        cache: false
    - service: notify.html5
      data:
        message: De vaat is schoon!
        title: Vaatwasser
    - delay:
        minutes: 10
    - service: html5.dismiss
#####################
### Koffie!!! #######
####################
- alias: Espressomachine aan
  trigger:
    - platform: state
      entity_id: input_boolean.nachtstand
      to: "off"
    - platform: time
      at: "06:45:00"
    # - platform: time
    #   at: '19:00:00'
  condition:
    - condition: state
      entity_id: input_boolean.vakantiestand
      state: "off"
    - condition: or
      conditions:
        - condition: state
          entity_id: group.all_persons
          state: home
        - condition: state
          entity_id: person.erik
          state: home
        - condition: state
          entity_id: person.nathalie
          state: home
  action:
    - service: switch.turn_on
      entity_id: switch.espressomachine_switch
- alias: Espressomachine uit
  trigger:
    - platform: template
      value_template: '{{ states("person.erik") != "home" and states("person.nathalie") != "home" and states("group.all_persons") == "not_home" }}'
    - platform: state
      entity_id: input_boolean.nachtstand
      to: "on"
    - platform: state
      entity_id: input_boolean.vakantiestand
      to: "on"
    - platform: template
      value_template: "{{ is_state('binary_sensor.workday_sensor', 'on') and now().strftime('%H:%M') > '09:00' }}"
  action:
    - delay:
        hours: 1
    - service: switch.turn_off
      entity_id: switch.espressomachine_switch
####################################
############### TV #################
####################################
- alias: TV uit na lange pauze
  trigger:
    platform: state
    entity_id: media_player.android_tv_woonkamer
    to: "paused"
    for:
      minutes: 30
  action:
    - service: media_player.turn_off
      entity_id: media_player.android_tv_woonkamer
####################################
############ Muziek ################
####################################
- alias: Radio volume
  trigger:
    platform: state
    entity_id: input_number.volume_radio
  action:
    service: media_player.volume_set
    data_template:
      entity_id: >
        {% if is_state("input_select.afspeelmedium", "Woonkamer (Chromecast)") %} media_player.woonkamer_ultra
        {% elif is_state("input_select.afspeelmedium", "Woonkamer (Home Mini)") %} media_player.home_mini_woonkamer
        {% elif is_state("input_select.afspeelmedium", "Werkkamer") %} media_player.werkkamer_mini
        {% elif is_state("input_select.afspeelmedium", "Ouderslaapkamer") %} media_player.ouderslaapkamer_mini  
        {% elif is_state("input_select.afspeelmedium", "Eetkamer") %} media_player.eetkamer
        {% elif is_state("input_select.afspeelmedium", "Keukenspeaker") %} media_player.keuken_speaker_2
        {% elif is_state("input_select.afspeelmedium", "Nest Hub Keuken") %} media_player.keuken_hub
        {% endif %}
      volume_level: "{{  states.input_number.volume_radio.state  }}"
- alias: Weekendmuziek
  trigger:
    - entity_id: binary_sensor.nas_pd02z_battery_powered_pir_sensor_v2_sensor_4
      platform: state
      to: "on"
    - platform: state
      entity_id: binary_sensor.motion_schuifpui
      to: "on"
    - platform: state
      entity_id: input_boolean.ochtendmuziek
      from: "off"
      to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.vakantiestand
      state: "off"
    - condition: state
      entity_id: input_boolean.nachtstand
      state: "off"
    - condition: template
      value_template: >-
        {% if trigger.entity_id == 'binary_sensor.nas_pd02z_battery_powered_pir_sensor_v2_sensor_4' or trigger.entity_id == 'binary_sensor.motion_schuifpui' %}
          {{ is_state('binary_sensor.workday_sensor', 'off') and is_state('input_boolean.ochtendmuziek', 'off') }}
        {% else %}
          {{ is_state('binary_sensor.workday_sensor', 'off') or is_state('binary_sensor.workday_sensor', 'on') }}
        {% endif %}
    - condition: or
      conditions:
        - condition: state
          entity_id: group.all_persons
          state: home
        - condition: state
          entity_id: person.erik
          state: home
        - condition: state
          entity_id: person.nathalie
          state: home
  action:
    - service: bluesound.unjoin
      entity_id: media_player.keuken_speaker_2
    - service: input_boolean.turn_on
      entity_id: input_boolean.ochtendmuziek
    - service: script.turn_on
      entity_id: script.play_spotify_morning
- alias: ochtendmuziek_uit
  trigger:
    - platform: state
      entity_id: input_boolean.ochtendmuziek
      from: "on"
      to: "off"
    - device_id: 0435dbb6373049949c44c04f3de67525
      domain: hue
      platform: device
      subtype: turn_off
      type: remote_button_short_release
  condition: []
  action:
    - service: media_player.media_pause
      entity_id: media_player.eetkamer_speakers
######################################
######### Brievenbus #################
######################################
- alias: brief in de bus
  trigger:
    - platform: state
      entity_id: binary_sensor.vibration_brievenbus
      to: "on"
    - platform: state
      entity_id: binary_sensor.vibration_brievenbus_2
      to: "on"
  condition: []
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.brievenbus
    - service: media_player.volume_set
      data:
        entity_id: >-
          {% set ms = namespace(items=[]) %}
          {%- for state in states.input_boolean -%}
            {%- if ( state.state_with_unit =="on") and (state_attr(state.entity_id, 'icon') == 'mdi:cast-audio'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-chrome'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-home') -%}
              {%- set ms.items = ms.items + ['media_player.' + state.entity_id.split('.')[1]] -%}
            {%- endif -%}
          {%- endfor -%}
          {{- ms.items-}}
        volume_level: 0.5
    - service: tts.google_home_say
      data:
        entity_id: >-
          {% set ms = namespace(items=[]) %}
          {%- for state in states.input_boolean -%}
            {%- if ( state.state_with_unit =="on") and (state_attr(state.entity_id, 'icon') == 'mdi:cast-audio'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-chrome'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-home') -%}
              {%- set ms.items = ms.items + ['media_player.' + state.entity_id.split('.')[1]] -%}
            {%- endif -%}
          {%- endfor -%}
          {{- ms.items-}}
        message: >
          <speak>
            Er zit iets in de brievenbus!
          </speak>
        #        language: 'nl'
        cache: false
    - service: notify.html5
      data:
        message: "Er zit iets in de brievenbus!"
        title: "Brievenalert"
    - service: notify.all_mobile
      data:
        message: "Er zit iets in de brievenbus!"
        title: "Brievenalert"
        data:
          sticky: "false"
    - delay:
        minutes: 10
    - service: html5.dismiss
- alias: reset brievenbus
  trigger:
    - platform: time
      at: "00:00:00"
  condition:
    - condition: state
      entity_id: input_boolean.brievenbus
      state: "on"
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.brievenbus
###################################
####### Perfume Genie #############
###################################
- alias: genie uit als de schuifpui open is
  trigger:
    - platform: state
      entity_id: binary_sensor.schuifpui
      to: "on"
  condition:
    - condition: state
      entity_id: switch.genie
      state: "on"
  action:
    - service: switch.turn_off
      entity_id: switch.genie
- alias: Genie aan als schuifpui dicht gaat
  trigger:
    - platform: state
      entity_id: binary_sensor.schuifpui
      to: "off"
  condition:
    condition: or
    conditions:
      - condition: time
        after: "20:00:00"
        before: "21:00:00"
      - condition: time
        after: "06:30:00"
        before: "07:00:00"
  action:
    - service: switch.turn_on
      entity_id: switch.genie
- alias: genie aan
  trigger:
    - platform: time
      at: "20:00:00"
    - platform: time
      at: "06:30:00"
  condition:
    - condition: state
      entity_id: binary_sensor.schuifpui
      state: "off"
  action:
    - service: switch.turn_on
      entity_id: switch.genie
- alias: genie uit
  trigger:
    - platform: time
      at: "21:00:00"
    - platform: time
      at: "07:00:00"
  condition: []
  action:
    - service: switch.turn_off
      entity_id: switch.genie

- alias: Genie Set strength slider
  id: "genie-slider-sterkte"
  trigger:
    platform: state
    entity_id: sensor.genie_sterkte
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: sensor.genie_sterkte
              state: "1"
          sequence:
            - service: input_number.set_value
              data_template:
                entity_id: input_number.genie_speed
                value: "1.0"
        - conditions:
            - condition: state
              entity_id: sensor.genie_sterkte
              state: "2"
          sequence:
            - service: input_number.set_value
              data_template:
                entity_id: input_number.genie_speed
                value: "2.0"
        - conditions:
            - condition: state
              entity_id: sensor.genie_sterkte
              state: "3"
          sequence:
            - service: input_number.set_value
              data_template:
                entity_id: input_number.genie_speed
                value: "3.0"

- alias: Genie Strength slider low
  id: "genie-slider-sterkte-verzet"
  trigger:
    - platform: state
      entity_id: input_number.genie_speed
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: input_number.genie_speed
              state: "1.0"
          sequence:
            - service: rest_command.genie_low
        - conditions:
            - condition: state
              entity_id: input_number.genie_speed
              state: "2.0"
          sequence:
            - service: rest_command.genie_med
        - conditions:
            - condition: state
              entity_id: input_number.genie_speed
              state: "3.0"
          sequence:
            - service: rest_command.genie_high

#####################################
############## afval ################
#####################################
- alias: "Bakken aan de straat"
  trigger:
    - platform: time
      at: "06:00:00"
  condition:
    - condition: template
      value_template: >
        {% set awsh = [states.sensor.afvalinfo_gft, states.sensor.afvalinfo_pbd, states.sensor.afvalinfo_restafval, states.sensor.afvalinfo_papier] %}
        {{ awsh | selectattr('attributes.days_until_collection_date','<', 1) | list | length >= 1 }}
  action:
    - service: notify.all_mobile
      data_template:
        title: Bakken aan de straat
        message: >-
          {% if state_attr('sensor.afvalinfo_gft', 'days_until_collection_date') == 0 %}
            - Groene bak
          {% endif %}
          {% if state_attr('sensor.afvalinfo_pbd', 'days_until_collection_date') == 0 %}
            - PMD Zakken
          {% endif %}
          {% if state_attr('sensor.afvalinfo_restafval', 'days_until_collection_date') == 0 %}
            - Grijze bak
          {% endif %}
          {% if state_attr('sensor.afvalinfo_papier', 'days_until_collection_date') == 0 %}
            - Oud papier
          {% endif %}
########################################
########### PICNIC #####################
########################################
- alias: Picnic in 30 mins
  description: "Picnic komt eraan"
  trigger:
    - platform: template
      value_template: >-
        {% if states("sensor.picnic_delivery") != "unknown" or "unavailable" %} 
          {{as_timestamp(state_attr('sensor.picnic_delivery', 'delivery').window_start)
          - as_timestamp(states('sensor.date') + " " + states('sensor.time'))
          - 1800 < 0}}
        {% endif %}
  condition: []
  action:
    - service: tts.google_home_say
      data:
        entity_id: >-
          {% set ms = namespace(items=[]) %}
          {%- for state in states.input_boolean -%}
            {%- if ( state.state_with_unit =="on") and (state_attr(state.entity_id, 'icon') == 'mdi:cast-audio'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-chrome'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-home') -%}
              {%- set ms.items = ms.items + ['media_player.' + state.entity_id.split('.')[1]] -%}
            {%- endif -%}
          {%- endfor -%}
          {{- ms.items-}}
        message: >-
          <speak>
            Picnic komt eraan!<break time="300ms"/> Over ongeveer een half uurtje staan ze voor de deur.
          </speak>
        #        language: 'nl'
        cache: false
    - service: notify.html5
      data:
        message: De Picnic komt eraan!
        title: Picnic
    - delay:
        minutes: 5
    - service: html5.dismiss
  mode: single

- alias: Picnic bestelwindow dicht
  description: "Picnic snel bestellen"
  trigger:
    - platform: template
      value_template: >-
        {% if states("sensor.picnic_delivery") != "unknown" or "unavailable" %} 
          {{as_timestamp(state_attr('sensor.picnic_delivery', 'delivery').cut_off_time)
          - as_timestamp(states('sensor.date') + " " + states('sensor.time'))
          - 3600 < 0}}
        {% endif %}
  condition: []
  action:
    - service: tts.google_home_say
      data:
        entity_id: >-
          {% set ms = namespace(items=[]) %}
          {%- for state in states.input_boolean -%}
            {%- if ( state.state_with_unit =="on") and (state_attr(state.entity_id, 'icon') == 'mdi:cast-audio'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-chrome'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-home') -%}
              {%- set ms.items = ms.items + ['media_player.' + state.entity_id.split('.')[1]] -%}
            {%- endif -%}
          {%- endfor -%}
          {{- ms.items-}}
        message: >-
          <speak>
            Bestel nog snel je laatste Picnic boodschappen!<break time="300ms"/> Over een uur kan het niet meer.
          </speak>
        #        language: 'nl'
        cache: false
    - service: notify.html5
      data:
        message: Nog een uur om producten aan je Picnic winkelmand toe te voegen!
        title: Picnic
    - delay:
        minutes: 5
    - service: html5.dismiss
  mode: single
########################################
############## Test ####################
######################################
- alias: test mediaplayers
  trigger:
    - platform: state
      entity_id: input_boolean.test2
      to: "on"
  condition: []
  action:
    - service: media_player.volume_set
      data:
        entity_id: >-
          {% set ms = namespace(items=[]) %}
          {%- for state in states.input_boolean -%}
            {%- if ( state.state_with_unit =="on") and (state_attr(state.entity_id, 'icon') == 'mdi:cast-audio'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-chrome'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-home') -%}
              {%- set ms.items = ms.items + ['media_player.' + state.entity_id.split('.')[1]] -%}
            {%- endif -%}
          {%- endfor -%}
          {{- ms.items-}}
        volume_level: 0.5
    - service: tts.google_home_say
      data:
        entity_id: >-
          {% set ms = namespace(items=[]) %}
          {%- for state in states.input_boolean -%}
            {%- if ( state.state_with_unit =="on") and (state_attr(state.entity_id, 'icon') == 'mdi:cast-audio'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-chrome'
              or state_attr(state.entity_id, 'icon') == 'mdi:google-home') -%}
              {%- set ms.items = ms.items + ['media_player.' + state.entity_id.split('.')[1]] -%}
            {%- endif -%}
          {%- endfor -%}
          {{- ms.items-}}
        message: >
          <speak>
            De test is geslaagd!
          </speak>
        #        language: 'nl'
        cache: false
